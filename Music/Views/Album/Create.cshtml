@model Music.ViewModels.Album.AlbumCreateViewModel

@{
    ViewData["Title"] = "Добавление альбома";
}

<div class="container mt-5">
    <h2 class="mb-4">Добавить альбом для @Model.Artist.Name </h2>
    
    
    <div class="card d-flex mt-4 col-md-12">
        <div class="row g-0 h-100">

            <div class="col-md-4 h-100">

                <img src="/img/notImage.jpg"
                     class="img-fluid rounded-start h-100 w-100 p-3 "
                     style="object-fit: contain;"
                     alt="">
                <input type="file" name="imgFiles" id="inputImgFile" class="p-3 text-light" />
            </div>

            <div class="col-md-8">
                <div class="card-body h-100">

                    <div class="mb-3 col-6">
                        <label asp-for="@Model.Album.Name" class="form-label text-light">Навзвание альбома</label>
                        <input asp-for="@Model.Album.Name" class="form-control" placeholder="Введите название"/>
                    </div>

                    <div class="mb-3 col-6">
                        <label asp-for="@Model.Album.YearOfIssue" class="form-label text-light">Дата релиза</label>
                        <input asp-for="@Model.Album.YearOfIssue" type="date" asp-format="{0:yyyy-MM-dd}" class="form-control"/>
                    </div>

                    <!-- Контейнер для динамически добавляемых треков -->
                    <div id="Songs" class="col-lg-12">
                        <h4 class="mb-4 text-light">Песни</h4>
                        <div class="track-list">
                            <div id="songsContainer"></div>
                        </div>
                        <!--Поле для добавления треков-->
                        <div id="inputAddSongs"></div>
                        <div id="hiddenSongsInputs"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <form asp-controller="Album" asp-action="Create" method="post">
        <input type="hidden" asp-for="@Model.Album.ArtistId" value="@Model.Artist.Id" />



        <div class="mb-3 col-3">
            <label asp-for="@Model.Album.UrlImg" class="form-label">URL карточки альбома</label>
            <input asp-for="@Model.Album.UrlImg" class="form-control" placeholder="https://example.com/image.jpg"/>
        </div>

        

        <h3 class="mt-4">Треки</h3>
        <!-- скрываемые поля для треков, которые будут динамически добавляться -->


        <button id="addSongButton" class="btn btn-success mb-3">Добавить трек</button>

        <button type="submit" class="btn btn-primary mb-3">Добавить альбом</button>
    </form>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-3">
            @TempData["ErrorMessage"]
        </div>
        //TODO Добавить возможность добавления картинки. 
    }
</div>


        
@section Scripts
{
    <script>
        $(document).ready(function() {
            let songIndex = 0;
            let inputSongs = [];

            function addSongField() {
                const songField = `
                    <div class="song-input mb-3">       
                          <input type="file" class="text-light col-6" name="audioFiles" id="inputFile" multiple " />
                          <button type="button" class="btn btn-success saveSong col-3">Сохранить</button>
                        </div>
                    </div>  
                `;
                $('#inputAddSongs').append(songField);
            }


            // При клике на "Добавить трек"
            $('#addSongButton').on('click',
                function(e) {
                    e.preventDefault();
                    addSongField();
                });

            // При клике на "Сохранить"
            $('#inputAddSongs').on('click', '.saveSong', async function () {
                const input = document.getElementById('inputFile');
                const files = input.files;

                if (!files.length) {
                    alert('Выберите хотя бы один файл');
                    return;
                }

                const formData = new FormData();
                for (const file of files) {
                    formData.append('audioFiles', file); 
                }

                const response = await fetch('/Cloudinary/Audio', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const songs = await response.json();
                    inputSongs.push(songs);
                    for (const song of songs) {
                        const trackHtml = `
                            <div class="track-item">
                              <div class="track-number text-light">${songIndex + 1}</div>
                              <div class="track-info col-4">
                                  <h6 class="mb-0 text-light">${song.fileName}</h6>
                              </div>
                              <audio controls class="audio-player col-8">
                                  <source src="${song.url}" type="audio/mpeg">
                                  Ваш браузер не поддерживает аудио элемент.
                              </audio>
                          </div>
                        `;
                        $('#songsContainer').append(trackHtml);
                        songIndex++;
                    }
                    $(this).closest('.song-input').remove();
                    renderHiddenInputs();
                } else {
                    alert('Ошибка при загрузке файлов');
                }
            });


            // Обновляем hidden inputs для отправки на сервер
            function renderHiddenInputs() {
                $('#hiddenSongsInputs').empty();
                inputSongs.forEach((songGroup, groupIndex) => {
                    songGroup.forEach((song, index) => {
                        const songIndex = groupIndex * songGroup.length + index;
                        $('#hiddenSongsInputs').append(`
                        <input type="hidden" name="Album.Songs[${songIndex}].Name" value="${song.fileName}" />
                        <input type="hidden" name="Album.Songs[${songIndex}].Url" value="${song.url}" />
                    `);
                    });
                });
            }
            // Инициализация
            addSongField();
        });
    </script>
}