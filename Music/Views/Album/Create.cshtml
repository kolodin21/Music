@using Music.Views.Shared.Components
@model Music.ViewModels.Album.AlbumCreateViewModel

@{
    ViewData["Title"] = "Добавление альбома";
}

<div class="container mt-5">
    <h2 class="mb-4">Добавить альбом для @Model.Artist.Name </h2>
    
    
    <form asp-controller="Album" asp-action="Create" method="post">
        <input type="hidden" asp-for="@Model.Album.ArtistId" value="@Model.Artist.Id" />
        <div class="card d-flex mt-4 col-md-12">
            <div class="row g-0 h-100">

                <div class="col-md-4 d-flex flex-column align-items-center gap-3">

                    <div class="ratio ratio-1x1 w-100 bg-light rounded">
                        <img id="previewImage"
                             src="/img/notImage.jpg"
                             class="img-fluid rounded p-2"
                             style="object-fit: contain;"
                             alt="Превью изображения">
                    </div>

                    <div class="w-100">
                        <label for="inputImgFile" class="btn btn-outline-primary w-100">
                            <i class="bi bi-upload me-2"></i>
                            Выбрать изображение
                        </label>
                        <input type="file" name="file" id="inputImgFile" accept="image/*" class="d-none">
                    </div>

                    <input type="hidden" asp-for="@Model.Album.UrlImg" id="imgUrlHidden" />
                </div>

                <div class="col-md-8">
                    <div class="card-body h-100">

                        <div class="mb-3 col-6">
                            <label asp-for="@Model.Album.Name" class="form-label text-light">Навзвание альбома</label>
                            <input asp-for="@Model.Album.Name" class="form-control" placeholder="Введите название"/>
                        </div>

                        <div class="mb-3 col-6">
                            <label asp-for="@Model.Album.YearOfIssue" class="form-label text-light">Дата релиза</label>
                            <input asp-for="@Model.Album.YearOfIssue" type="date" asp-format="{0:yyyy-MM-dd}" class="form-control"/>
                        </div>

                        <div class="mb-3 col-3">
                            <label asp-for="@Model.Album.UrlImg" class="form-label d-none">URL карточки альбома</label>
                            <input asp-for="@Model.Album.UrlImg" class="form-control d-none" placeholder="https://example.com/image.jpg"/>
                        </div>

                        <!-- Контейнер для динамически добавляемых треков -->
                        <div id="Songs" class="col-lg-12">
                            <h4 class="mb-4 text-light">Песни</h4>
                            <div class="track-list">
                                <div id="songsContainer"></div>
                            </div>

                            <!--Поле для добавления треков-->
                            <div id="inputAddSongs"></div>

                            <button id="addSongButton" class="btn btn-primary mt-3 d-none">
                                <i class="bi bi-file-earmark-plus"></i>
                            </button>

                            <div id="hiddenSongsInputs"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary mt-3">Добавить альбом</button>
    </form>


    @Html.ErrorMessage(@TempData["ErrorMessage"] as string)

</div>

        
@section Scripts
{
   
    <script>
        $(document).ready(function() {
            let songIndex = 0;
            let inputSongs = [];

            function addSongField() {
                const songField = `
                    <div class="song-input mb-3 col-6">
                      <div class="w-100">
                        <!-- Стилизованная кнопка-->
                        <label for="inputFile" class="btn btn-outline-primary w-100 mt-2 songLabel">
                          <i class="bi bi-upload me-2"></i>
                          Выбрать песни
                        </label>

                        <!-- Сам инпут (скрыт) -->
                        <input type="file"
                               name="files"
                               id="inputFile"
                               class="d-none"
                               accept="audio/*"
                               multiple>
                      </div>

                       <!-- Список выбранных файлов -->
                        <ul class="file-names mt-2 list-unstyled text-light small"></ul>


                      <button type="button" class="btn btn-success saveSong mt-3 d-none">
                          <i class="bi bi-cloud-upload"></i>
                    </button>
                    </div>
                `;
                $('#inputAddSongs').append(songField);
            }

            // При клике на "Добавить трек"
            $('#addSongButton').on('click',
                function(e) {
                    e.preventDefault();
                    $(this).addClass('d-none');
                    addSongField();
                });

            $('#inputAddSongs').on('change', 'input[type="file"]', function () {
                const container = $(this).closest('.song-input');
                const fileList = container.find('.file-names');
                const files = this.files;

                fileList.empty(); // Очистить список перед добавлением новых

                if (files.length > 0) {
                    container.find('.saveSong').removeClass('d-none');
                    container.find('.songLabel').addClass('d-none');

                    for (const file of files) {
                        fileList.append(`<li>${file.name}</li>`);
                    }
                }
            });

            // При клике на "Сохранить"
            $('#inputAddSongs').on('click', '.saveSong', async function () {
                const input = document.getElementById('inputFile');
                const files = input.files;

                const $btn = $(this).closest('.song-input').find('.saveSong');
                $btn.setLoading(true);

                if (!files.length) {
                    alert('Выберите хотя бы один файл');
                    return;
                }

                const formData = new FormData();
                for (const file of files) {
                    formData.append('files', file); 
                }

                const response = await fetch('/Cloudinary/LoadArrayFiles', {
                    method: 'POST',
                     
                    body: formData
                });

                if (response.ok) {
                    const songs = await response.json();
                    inputSongs.push(songs);
                    for (const song of songs) {
                        const trackHtml = `
                            <div class="track-item">
                              <div class="track-number text-light">${songIndex + 1}</div>
                              <div class="track-info col-4">
                                  <h6 class="mb-0 text-light">${song.fileName}</h6>
                              </div>
                              <audio controls class="audio-player col-8">
                                  <source src="${song.url}" type="audio/mpeg">
                                  Ваш браузер не поддерживает аудио элемент.
                              </audio>
                          </div>
                        `;
                        $('#songsContainer').append(trackHtml);
                        $("#addSongButton").removeClass('d-none');
                        songIndex++;
                    }
                    $(this).closest('.song-input').remove();
                    renderHiddenInputs();

                    $btn.setLoading(false);
                } else {
                    $btn.setLoading(false);
                    alert('Ошибка при загрузке файлов');
                }
            });


            // Обновляем hidden inputs для отправки на сервер
            function renderHiddenInputs() {
                $('#hiddenSongsInputs').empty();
                inputSongs.forEach((songGroup, groupIndex) => {
                    songGroup.forEach((song, index) => {
                        const songIndex = groupIndex * songGroup.length + index;
                        $('#hiddenSongsInputs').append(`
                        <input type="hidden" name="Album.Songs[${songIndex}].Name" value="${song.fileName}" />
                        <input type="hidden" name="Album.Songs[${songIndex}].Url" value="${song.url}" />
                    `);
                    });
                });
            }
            // Инициализация
            addSongField();
        });

        $('#inputImgFile').on('change', function () {
            const file = this.files[0];
            if (!file) return;

            const formData = new FormData();
            formData.append('file', file);

            $.ajax({
                url: '/Cloudinary/LoadSingleFile',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (result) {
                    $('#imgUrlHidden').val(result.url);
                    $('#previewImage').attr('src', result.url);
                },
                error: function (xhr) {
                    const error = xhr.responseJSON?.error || 'Ошибка загрузки изображения';
                    alert(error);
                }
            });
        });

    </script>
}