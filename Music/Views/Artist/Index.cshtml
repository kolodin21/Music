@using Music.ViewModels.Artist
@model ArtistIndexViewModel

@{
    ViewData["Title"] = "Все артисты";
}

<div class="container py-5">

    <h1 class="text-center mb-5">Все артисты</h1>

    <nav class="navbar navbar-light bg-light">
        <div class="container-fluid">
            <a class="btn btn-success" asp-controller="Artist" asp-action="Create">Добавить артиста</a>
            <form class="d-flex">
                <input id="searchFields" class="form-control me-2" type="search" placeholder="Search" aria-label="Search" autocomplete="off">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <label>
                Сортировка:
                <select class="form-select">
                    <option value="0">--</option>
                    <option value="1">По возрастанию</option>
                    <option value="2">По убыванию</option>
                </select>
            </label>
        </div>
    </nav>

    <div class="row mt-5" id="artist-results">
        @await Html.PartialAsync("_ArtistCardsPartial", Model.Artists)
    </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}

@section Scripts {
    <script>
        let timeoutId;

        $("#searchFields").on("input", function () {
            const name = $(this).val();

            clearTimeout(timeoutId);
            timeoutId = setTimeout(function () {
                $.get("/Artist/Search", { name: name })
                    .done(function (data) {
                        $("#artist-results").html(data);
                    })
                    .fail(function () {
                        $("#artist-results").html("<p class='text-danger'>Ошибка загрузки</p>");
                    });
            }, 300); 
        });
    </script>
}
